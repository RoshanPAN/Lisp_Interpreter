(COND ((NULL T)  (PLUS 1 2))    (T (MINUS 3 2)))
(PLUS 12 55)
(EQ 12 55)
(QUOTE(234 2))
(CAR (QUOTE(12 123)))
(CDR (QUOTE(12 123)))
(CAR (CAR (CONS (QUOTE (1 2 3)) 55)))
(COND (T (PLUS 1 2)))
(CONS 12 55)
(CONS 2 (CONS 3(CONS 4 5)))
(MINUS (TIMES 9 (PLUS 1 2)) (PLUS 3 (MINUS 8 1) ) )
(GREATER (TIMES 1 (PLUS 2 2)) (PLUS 9 1)  )
(EQ (TIMES 1 (PLUS 2 2)) (MINUS 6 1)  )
(ATOM (PLUS 2 2))
(NULL (EQ 2 3))
(INT (GREATER 3 2))
(CONS (CDR (QUOTE (2 3 4 5))) (CONS 3 (CONS 2 (QUOTE (4 5)) ) ))
(EQ (CAR(QUOTE(() 5 T))) (CDR(CONS T NIL)))
(EQ (QUOTE()) NIL)
(EQ NIL (QUOTE()))
(EQ () NIL)
(EQ (EQ T ()) (LESS (CDR (CONS 4 5)) (PLUS 1 (CAR (QUOTE(2 2))  )) ))
(CONS (CONS (QUOTE (A B C)) 1) (CONS 2 3))
(CDR (QUOTE (2 3 4 5)))
()
NIL
(ATOM (QUOTE (T11 5)))
(ATOM NIL)
(INT NIL)
(NULL NIL)
(DEFUN F (X Y) (PLUS Y X))
(F 100 6)
(DEFUN F (X) X)
(F 5)
(DEFUN F (X) (CDR X) )
(F (QUOTE(5 6)) )
(DEFUN F (X) (CDR X) )
(F (F(QUOTE(5 6))) )
(DEFUN F (X Y) () )
(F 5 1 )
(DEFUN F () NIL )
(F )
(DEFUN F (X Y) (PLUS Y X))
(F (PLUS 5 6) (MINUS 6 5))
(F (PLUS 5 6) 1)
(DEFUN F (X Y) (PLUS Y X))
(DEFUN G (X Y) (F X Y))
(DEFUN H (X) (G X X))
(G 1 2)
(G (H 1) (H 2))
(DEFUN MEM (X LIST)  (COND ( (NULL LIST) NIL)   ( (EQ X (CAR LIST)) T)  (T (MEM X (CDR LIST))) ))
(MEM 3 (QUOTE(2 3 4)))
(MEM 2 (QUOTE (3 4)))
(DEFUN UNI (S1 S2)    (COND ( (NULL S1) S2)          ( (NULL S2) S1)          (T (COND             ( (MEM (CAR S1) S2) (UNI (CDR S1) S2))             ( T (CONS (CAR S1) (UNI (CDR S1) S2))))          )     ))
(UNI (QUOTE(1 2 3 10 )) (QUOTE(1 3 4 5)) )
(DEFUN F1 () (MEM 1 (QUOTE(1 3 5))))
(DEFUN F2 () (COND (NIL (QUOTE NIL)) (T (QUOTE XYZ))))
(DEFUN G1 () (CONS (F1) (F2)))
(DEFUN G2 () (CONS (QUOTE A) (QUOTE (B C D))))
(F1 )
( F2)
( G1)
(G2)
(DEFUN POWER (X Y)    (COND ((EQ Y 0) 1)          (T (TIMES X (POWER X (MINUS Y 1))))    ))
(POWER 2 8)
(DEFUN ADDPAIR (X Y Z)     (COND ((NULL X) Z)           ( T (CONS (CONS (CAR X) (CAR Y)) (ADDPAIR (CDR X) (CDR Y) Z)))     ))
(ADDPAIR (QUOTE (1)) (QUOTE (2)) ())
(ADDPAIR (QUOTE (1 2 3)) (QUOTE (4 5 6)) NIL)
(ADDPAIR (QUOTE (1 2 3)) (QUOTE (4 5 6)) (CONS (CONS (QUOTE X) (POWER 2 4)) NIL))
(ADDPAIR (QUOTE (X Y Z)) (QUOTE (4 5 6)) NIL)
(DEFUN APPENDWITH (LIST A)       (COND ((NULL LIST) (CONS A NIL))             ( T (CONS (CAR LIST) (APPENDWITH (CDR LIST) A))) ))
(APPENDWITH () 2)
(APPENDWITH (QUOTE (1 2 3)) 4)
(DEFUN INVERSE (LIST)       (COND ( (NULL LIST) LIST)             (T (APPENDWITH (INVERSE (CDR LIST)) (CAR LIST)))       ))
(INVERSE (QUOTE(2 3 4 5 6 7 8)))
(INVERSE (QUOTE(A B C D)))
(DEFUN MOD1 (M N)       (COND ( (LESS M N) M)             ( T (MOD1 (MINUS M N) N)) ))
(MOD1 13 7)
(MOD1 111 3)
(MOD1 31 (POWER 2 6))
(DEFUN FINDMIN (LIST)       (COND ( (NULL (CDR LIST)) (CAR LIST) )             ( (NULL (CDR (CDR LIST)))               (COND ( (GREATER (CAR LIST) (CAR (CDR LIST))) (CAR (CDR LIST)) )                     ( T (CAR LIST))               )             )             ( (LESS (CAR LIST) (CAR (CDR LIST))) (FINDMIN (CONS (CAR LIST) (CDR (CDR LIST)))) )             ( T (FINDMIN (CDR LIST)) )       ))
(DEFUN DELETE (X LIST)       (COND ( (EQ X (CAR LIST)) (CDR LIST))             ( T (CONS (CAR LIST) (DELETE X (CDR LIST))) )       ))
(FINDMIN (QUOTE (3)))
(FINDMIN (QUOTE (2 1)))
(FINDMIN (QUOTE (21 12 3 6 8 2)))
(DELETE 4 (QUOTE (1 2 3 4 5)))
(DEFUN SORT (LIST)       (COND ( (NULL (CDR LIST)) LIST)             ( T (CONS (FINDMIN LIST) (SORT (DELETE (FINDMIN LIST) LIST))) )       ))
(SORT (QUOTE (21 12 3 6 8 2)))
(DEFUN SWAPT (TREE)       (CONS (CDR TREE) (CAR TREE)) )
(SWAPT (QUOTE (1 Y Z)))
(DEFUN XOR (P1 P2)       (COND ((EQ P1 P2) NIL)             ( T T) ))
(XOR T NIL)
(XOR NIL NIL)
(XOR 2 3)
(XOR (XOR 3 3) NIL)
(SWAPT (QUOTE (X Y Z)))
(SWAPT (SWAPT (CONS 1 NIL)))
(DEFUN FACTORIAL (N)       (COND  ((EQ N 0) 1)              (T (TIMES N (FACTORIAL (MINUS N 1))))       ))
(FACTORIAL 6)
(FACTORIAL (PLUS (FACTORIAL 3) (FACTORIAL 0)))
(DEFUN ONE () 1)
(ONE)
(DEFUN TWO NIL 2)
(TWO)
(DEFUN F (X1 Y0) (PLUS 4 5))
(F 10 20)